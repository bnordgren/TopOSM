<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map[
    <!ENTITY % utils SYSTEM "include/utils.inc">
    <!ENTITY % colors SYSTEM "include/colors.inc">
    <!ENTITY symbolsdir "symbols">
    <!ENTITY customsymbolsdir "custom-symbols">
    <!ENTITY shieldsdir "${SHIELDS_DIR}">
    <!ENTITY dbsettings SYSTEM "include/dbsettings.inc">
    <!ENTITY extents SYSTEM "include/extents.inc">
    <!ENTITY extentsLatLon SYSTEM "include/extentsLatLon.inc">
    <!ENTITY rounded SYSTEM "include/rounded.inc">
    <!ENTITY roadoutline SYSTEM "include/roadoutline.inc">
    <!ENTITY bridgeoutline SYSTEM "include/bridgeoutline.inc">
    <!ENTITY highway SYSTEM "include/highway.inc">
    <!ENTITY rail SYSTEM "include/rail.inc">
    <!ENTITY power-lines SYSTEM "include/power-lines.inc">
    <!ENTITY aeroway SYSTEM "include/aeroway.inc">
    <!ENTITY bridge SYSTEM "include/bridge.inc">
    <!ENTITY water SYSTEM "include/water.inc">
    <!ENTITY label SYSTEM "include/labels.inc">
    <!ENTITY shield SYSTEM "include/shields.inc">
    <!ENTITY symbol SYSTEM "include/symbols.inc">
    <!ENTITY water-line-rules SYSTEM "include/water-line-rules.inc">
    <!ENTITY highway-highzoom-fill-rules SYSTEM "include/highway-highzoom-fill-rules.inc">
    <!ENTITY railway-outline-rules SYSTEM "include/railway-outline-rules.inc">
    <!ENTITY railway-fill-rules SYSTEM "include/railway-fill-rules.inc">
    %utils;
    %colors;
]>

<Map background-color="transparent" srs="&srs32100;">

&water;

<Style name="nature-areas">
    <Rule>
      &minz7; &maxz9;
      <Filter>[way_area] &gt; 50000000</Filter>
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.05" />
      <LineSymbolizer
        stroke="#170"
        stroke-width="1.0"
        stroke-dasharray="5,2"
        stroke-opacity="0.7" />
    </Rule>
    <Rule>
      <Filter>[way_area] &gt; 10000000</Filter>
      &minz10; &maxz11;
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.05" />
      <LineSymbolizer
        stroke="#170"
        stroke-width="1.8"
        stroke-dasharray="7,3"
        stroke-opacity="0.7" />
    </Rule>

    <!-- High zoom: Outline large areas, shade small areas -->
    <!-- This is a workaround for the fact that some large areas,
    like some national parks, are just tagged as 'park' -->
    <Rule>
      <Filter>[way_area] &gt; 5000000</Filter>
      &minz12; &maxz18;
      <LineSymbolizer
        stroke="#170"
        stroke-width="3"
        stroke-dasharray="8,3"
        stroke-opacity="0.7" />
    </Rule>
    <Rule>
      <Filter>[way_area] &lt; 5000000</Filter>
      <PolygonSymbolizer
        fill="#170"
        fill-opacity="0.1" />
    </Rule>
    <!--
    <Rule>
      <Filter>[way_area] &gt;= 200 000 000</Filter>
      &minz8; &maxz9;
      <TextSymbolizer name="[name]" face-name="DejaVu Sans Book" size="7" fill="#170" halo-radius="1" wrap-width="14"/>
    </Rule>
    <Rule>
      &minz10; &maxz11;
      <TextSymbolizer name="[name]" face-name="DejaVu Sans Book" size="9" fill="#170" halo-radius="1" wrap-width="14"/>
    </Rule>
    -->
</Style>

<Style name="misc-areas">

  <!-- Military areas -->
  <Rule>
    &minz6; &maxz13;
    <Filter>[landuse] = 'military'</Filter>
    <PolygonPatternSymbolizer file="&customsymbolsdir;/hatch-red-10.png" />
    <LineSymbolizer stroke="#f00" stroke-width="1" stroke-opacity="1.0" />
  </Rule>
  <Rule>
    &minz14;
    <Filter>[landuse] = 'military'</Filter>
    <PolygonPatternSymbolizer file="&customsymbolsdir;/hatch-red-16.png" />
    <LineSymbolizer stroke="#f00" stroke-width="1.5" stroke-opacity="1.0" />
  </Rule>

  <Rule>
      &minz10;
      <Filter>  
        [landuse] = 'cemetery' or
        [amenity] = 'grave_yard'
      </Filter>
      <PolygonSymbolizer fill="#8b8" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#8b8" stroke-width="1" />
  </Rule>
  <Rule>
      &minz10;
      <Filter>[landuse] = 'construction'</Filter>
      <PolygonSymbolizer fill="#bb3" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#bb3" stroke-width="1" />
  </Rule>
  <Rule>
      &minz10;
      <Filter>[natural] = 'beach'</Filter>
      <PolygonSymbolizer fill="#fec" fill-opacity="&areaopacity;" />
      <LineSymbolizer stroke="#fec" stroke-width="1" />
  </Rule>

</Style>

<!-- adapted from OSM mapnik stylesheet -->
<Style name="ferry-routes">
    <Rule>
      &minz8; &maxz10;
      <Filter>[route] = 'ferry'</Filter>
      <LineSymbolizer stroke="&waterlinecolor;" stroke-width="0.4" stroke-dasharray="4,4" />
    </Rule>
    <Rule>
      <Filter>[route] = 'ferry'</Filter>
      &minz11;
      <LineSymbolizer stroke="&waterlinecolor;" stroke-width="0.8" stroke-dasharray="6,6" />
    </Rule>
</Style>

&highway;
&rail;
&aeroway;
&bridge;
&label;
&shield;
&symbol;

<Style name="aerialway">
	<Rule>
		&minz12;
		<Filter>
			[aerialway] = 'cable_car' or
			[aerialway] = 'gondola' or
			[aerialway] = 'chair_lift' or
			[aerialway] = 'drag_lift'
		</Filter>	
		<LinePatternSymbolizer file="symbols/chair_lift.png" />
	</Rule>
</Style>

<Style name="buildings">
  <Rule>
      &minz12;
      <PolygonSymbolizer fill="black" fill-opacity="0.6" />
  </Rule>
</Style>

&power-lines;

<Style name="county-borders">
	<Rule>
		&minz9; &maxz10;
  		<Filter>[boundary] = 'administrative' and [admin_level] = '6'</Filter>
  		<LineSymbolizer stroke="black" stroke-width="0.4" stroke-dasharray="10,3,2,3" />
	</Rule>
	<Rule>
		&minz11;
		<Filter>[boundary] = 'administrative' and [admin_level] = '6'</Filter>
		<LineSymbolizer stroke="black" stroke-width="0.7" stroke-dasharray="20,5,4,5" />
	</Rule>
</Style>

<Style name="state-borders">	
    <Rule>
  		&maxz5;
  		<Filter>[boundary] = 'administrative' and [admin_level] = '4'</Filter>
  		<LineSymbolizer stroke="black" stroke-width="0.5" stroke-dasharray="8,3,2,3" />
	</Rule>
	<Rule>
  		&minz6; &maxz10;
  		<Filter>[boundary] = 'administrative' and [admin_level] = '4'</Filter>
  		<LineSymbolizer stroke="black" stroke-width="0.8" stroke-dasharray="10,3,2,3" />
	</Rule>
	<Rule>
		&minz11;
		<Filter>[boundary] = 'administrative' and [admin_level] = '4'</Filter>
		<LineSymbolizer stroke="#825" stroke-width="8" stroke-opacity="0.5" />
		<LineSymbolizer stroke="black" stroke-width="1.5" stroke-dasharray="20,5,4,5" />
	</Rule>
</Style>

<Style name="country-borders">	
    <Rule>
  		&maxz5;
  		<Filter>[boundary] = 'administrative' and [admin_level] = '2'</Filter>
  		<LineSymbolizer stroke="black" stroke-width="1.0" stroke-dasharray="10,3,2,3" />
	</Rule>
	<Rule>
  		&minz6; &maxz10;
  		<Filter>[boundary] = 'administrative' and [admin_level] = '2'</Filter>
  		<LineSymbolizer stroke="black" stroke-width="1.5" stroke-dasharray="15,3,2,3" />
	</Rule>
	<Rule>
		&minz11;
		<Filter>[boundary] = 'administrative' and [admin_level] = '2'</Filter>
        <LineSymbolizer stroke="#880" stroke-width="12" stroke-opacity="0.5" />
		<LineSymbolizer stroke="black" stroke-width="3" stroke-dasharray="30,5,4,5" />
	</Rule>
</Style>



<!-- Layers -->

<Layer name="water-lines" status="on" srs="&srs900913;">
    <StyleName>water-tunnels</StyleName>
    <StyleName>water-lines</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, waterway, disused, lock,
                    CASE WHEN tunnel IN ('yes','true','1') THEN 'yes'::text ELSE tunnel END AS tunnel
               FROM ${DB_PREFIX}_line
               WHERE waterway IS NOT NULL
               ORDER BY z_order, ST_Length(way) DESC
            ) AS water_lines
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-areas-z2" status="on" srs="&srs900913;">
    <StyleName>water-areas-z2</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND way_area &gt; 5000000
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-areas-z7" status="on" srs="&srs900913;">
    <StyleName>water-areas-z7</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND way_area &gt; 300000
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-areas-z9" status="on" srs="&srs900913;">
    <StyleName>water-areas-z9</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND way_area &gt; 20000
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-areas-z11" status="on" srs="&srs900913;">
    <StyleName>water-areas-z11</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND way_area &gt; 300
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-areas-z14" status="on" srs="&srs900913;">
    <StyleName>water-areas-z14</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-z7" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z7</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT (ST_Dump(ST_Union(way))).geom AS way, SUM(way_area) AS way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND ST_IsValid(way)
                 AND way_area &gt; 300000
                 AND way &amp;&amp; !bbox!
               GROUP BY z_order
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-z9" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z9</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT (ST_Dump(ST_Union(way))).geom AS way, SUM(way_area) AS way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND ST_IsValid(way)
                 AND way_area &gt; 20000
                 AND way &amp;&amp; !bbox!
               GROUP BY z_order
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-z11" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z11</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT (ST_Dump(ST_Union(way))).geom AS way, SUM(way_area) AS way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND ST_IsValid(way)
                 AND way_area &gt; 300
                 AND way &amp;&amp; !bbox!
               GROUP BY z_order
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-z14" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z14</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT (ST_Dump(ST_Union(way))).geom AS way, SUM(way_area) AS way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND ST_IsValid(way)
                 AND way &amp;&amp; !bbox!
               GROUP BY z_order
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-invalid-z7" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z7</StyleName>
    <StyleName>ice</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, "natural", way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND NOT ST_IsValid(way)
                 AND way_area &gt; 300000
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-invalid-z9" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z9</StyleName>
    <StyleName>ice</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, "natural", way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND NOT ST_IsValid(way)
                 AND way_area &gt; 20000
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-invalid-z11" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z11</StyleName>
    <StyleName>ice</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, "natural", way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND NOT ST_IsValid(way)
                 AND way_area &gt; 300
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-outlines-invalid-z14" status="on" srs="&srs900913;">
    <StyleName>water-area-outlines-z14</StyleName>
    <StyleName>ice</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, "natural", way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (waterway IN ('riverbank')
                      OR landuse IN ('reservoir')
                      OR "natural" IN ('water'))
                 AND NOT ST_IsValid(way)
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="intermittent-water-areas" status="on" srs="&srs900913;">
    <StyleName>water-areas-z11</StyleName>
    <StyleName>water-areas-z14</StyleName>
    <StyleName>water-area-outlines-intermittent</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way
               FROM ${DB_PREFIX}_polygon
               WHERE landuse IN ('basin')
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-line-fills" status="on" srs="&srs900913;">
    <StyleName>water-line-fills</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, waterway, disused
               FROM ${DB_PREFIX}_line
               WHERE waterway IS NOT NULL
               ORDER BY z_order, ST_Length(way) DESC
            ) AS water_lines
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-features" status="on" srs="&srs900913;">
    <StyleName>wetlands</StyleName>
    <StyleName>ice</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, "natural"
               FROM ${DB_PREFIX}_polygon
               WHERE "natural" IN ('wetland', 'glacier')
               ORDER BY z_order, way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>
<Layer name="pipelines" status="on" srs="&srs900913;">
    <StyleName>pipelines</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, location
               FROM ${DB_PREFIX}_line
               WHERE man_made = 'pipeline'
               ORDER BY z_order, ST_Length(way) DESC
            ) AS pipelines
        </Parameter>
    </Datasource>
</Layer>


<Layer name="nature-areas" status="on" srs="&srs900913;">
  <StyleName>nature-areas</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">
      (SELECT way, way_area, name, boundary, "natural" FROM ${DB_PREFIX}_polygon WHERE
      boundary='national_park' OR
      leisure IN ('park', 'nature_reserve', 'common', 'playground', 'garden', 'golf_course', 'recreation_ground') OR
      landuse IN ('forest', 'vineyard', 'conservation', 'recreation_ground', 'village_green', 'allotments') OR
      "natural" IN ('wood')
      ) AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="misc-areas" status="on" srs="&srs900913;">
  <StyleName>misc-areas</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">
      (SELECT way, way_area, name, landuse, "natural", amenity
      FROM ${DB_PREFIX}_polygon
      WHERE landuse IS NOT NULL OR "natural" IS NOT NULL or amenity IS NOT NULL)
      AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="ferry-routes" status="on" srs="&srs900913;">
    <StyleName>ferry-routes</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, route FROM ${DB_PREFIX}_line WHERE route IS NOT NULL) AS routes
      </Parameter>
    </Datasource>
</Layer>

<Layer name="buildings" status="on" srs="&srs900913;">
    <StyleName>buildings</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
			(SELECT way FROM ${DB_PREFIX}_polygon WHERE building IS NOT NULL) as areas
  		</Parameter>
    </Datasource>
</Layer>

<Layer name="parking-outline" status="on" srs="&srs900913;">
    <StyleName>parking-outline</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, amenity, access FROM ${DB_PREFIX}_polygon ORDER BY z_order, way_area DESC) AS parking</Parameter>
    </Datasource>
</Layer>

<Layer name="railway" status="on" srs="&srs900913;">
    <StyleName>railway-outline</StyleName>
    <StyleName>railway-fill</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <Parameter name="table">
            (SELECT way, tunnel, highway,
                    CASE WHEN railway = 'spur' THEN 'rail' ELSE railway END AS railway,
                    CASE WHEN railway = 'spur' THEN 'spur'
                         WHEN service IN ('spur', 'yard', 'siding', 'crossover') THEN 'spur'
                         ELSE service
                    END AS service
               FROM ${DB_PREFIX}_line
               WHERE railway IS NOT NULL AND route IS NULL
               ORDER BY z_order, ST_Length(way)
            ) AS lines
        </Parameter>
    </Datasource>
</Layer>

<!-- Roads at z1-z8 (major roads only) -->
<Layer name="highway-lowzoom" status="on" srs="&srs900913;">
    <StyleName>highway-lowzoom</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, highway, tunnel FROM ${DB_PREFIX}_roads
      	WHERE highway = 'motorway' OR highway = 'trunk'
	   OR highway = 'primary'
      	ORDER BY z_order) AS lines
      </Parameter>
    </Datasource>
</Layer>

<Layer name="turning-circles-outline" status="on" srs="&srs900913;">
    <StyleName>turning-circles-outline</StyleName>
    <Datasource>
        &dbsettings;
        &extents;
        <Parameter name="table">
            (SELECT p.way as way, l.highway AS int_tc_type
               FROM ${DB_PREFIX}_point p
                 JOIN ${DB_PREFIX}_line l
                   ON ST_DWithin(p.way, l.way, 0.1)
               WHERE p.highway = 'turning_circle'
                     AND l.highway in ('tertiary', 'unclassified', 'residential', 'service')
            ) as turning_circle
        </Parameter>
    </Datasource>
</Layer>

<!-- Roads at z9+ (all roads) -->
<Layer name="highway-highzoom" status="on"  srs="&srs900913;">
    <StyleName>highway-highzoom-outline</StyleName>
    <StyleName>highway-highzoom-fill</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <!--
        asciiphil: By default, osm2pgsql gives link roads the
        same z_order value as their corresponding main classification.
        This results in, e.g., motorway_link roads being rendered on
        top of everything else, which looks kind of bad,
        especially at high zoom levels.  This alters the rendering order
        so link roads are always rendered before any other roads,
        which makes the map look nicer.
        -->
        <Parameter name="table">
            (SELECT way, highway, tunnel, bicycle,
                    CASE WHEN highway LIKE '%_link' THEN true
                        ELSE false
                    END AS link
               FROM ${DB_PREFIX}_line
               WHERE highway IS NOT NULL
               ORDER BY FLOOR(z_order / 10.0), link DESC, z_order) AS lines
        </Parameter>
    </Datasource>
</Layer>

<Layer name="turning-circles-fill" status="on" srs="&srs900913;">
    <StyleName>turning-circles-fill</StyleName>
    <Datasource>
        &dbsettings;
        &extents;
        <Parameter name="table">
            (SELECT p.way as way, l.highway AS int_tc_type
               FROM ${DB_PREFIX}_point p
                 JOIN ${DB_PREFIX}_line l
                   ON ST_DWithin(p.way, l.way, 0.1)
               WHERE p.highway = 'turning_circle'
                     AND l.highway in ('tertiary', 'unclassified', 'residential', 'service')
            ) as turning_circle
        </Parameter>
    </Datasource>
</Layer>

<Layer name="parking-fill" status="on" srs="&srs900913;">
    <StyleName>parking-fill</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">(SELECT way, amenity, access FROM ${DB_PREFIX}_polygon ORDER BY z_order, way_area DESC) AS parking</Parameter>
    </Datasource>
</Layer>

<Layer name="aeroway-line-outline" status="on" srs="&srs900913;">
    <StyleName>aeroway-outline</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_line WHERE aeroway IS NOT NULL ORDER BY z_order) AS lines
      </Parameter>
    </Datasource>
</Layer>

<Layer name="aeroway-area-outline" status="on" srs="&srs900913;">
    <StyleName>aeroway-outline</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_polygon WHERE aeroway IS NOT NULL ORDER BY z_order) AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="aeroway-line-fill" status="on" srs="&srs900913;">
    <StyleName>aeroway-fill</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_line WHERE aeroway IS NOT NULL ORDER BY z_order) AS lines
      </Parameter>
    </Datasource>
</Layer>

<Layer name="aeroway-area-fill" status="on" srs="&srs900913;">
    <StyleName>aeroway-fill</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aeroway FROM ${DB_PREFIX}_polygon WHERE aeroway IS NOT NULL ORDER BY z_order) AS areas
      </Parameter>
    </Datasource>
</Layer>

<Layer name="bridges" status="on" srs="&srs900913;">
    <StyleName>bridges</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <Parameter name="table">
            (SELECT way, highway, bicycle, waterway, tunnel, disused,
                    CASE WHEN railway = 'spur' THEN 'rail' ELSE railway END AS railway,
                    CASE WHEN railway = 'spur' THEN 'spur'
                         WHEN service IN ('spur', 'yard', 'siding', 'crossover') THEN 'spur'
                         ELSE service
                    END AS service,
                    CASE WHEN highway LIKE '%_link' THEN true
                         ELSE false
                         END AS link,
                    GENERATE_SERIES(1,2) AS pass
               FROM ${DB_PREFIX}_line
               WHERE (highway IS NOT NULL OR railway IS NOT NULL OR waterway IS NOT NULL)
                 AND bridge IS NOT NULL
                 AND NOT bridge = 'no'
               ORDER BY FLOOR(z_order / 10.0), pass, link DESC, z_order
            ) AS bridges
        </Parameter>
    </Datasource>
</Layer>

<Layer name="aerialway" status="on" srs="&srs900913;">
    <StyleName>aerialway</StyleName>
    <Datasource>
	  &dbsettings; &extents;
      <Parameter name="table">
      	(SELECT way, aerialway from ${DB_PREFIX}_line WHERE aerialway IS NOT NULL) AS aerialway
      </Parameter>
    </Datasource>
</Layer>

<Layer name="power-lines" status="on" srs="&srs900913;">
    <StyleName>power-lines</StyleName>
    <StyleName>power-busbar-voltage</StyleName>
    <StyleName>power-busbar</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <Parameter name="table">
            (SELECT way, power, cables, wires, voltage
               FROM ${DB_PREFIX}_line
               WHERE power IS NOT NULL
            ) AS power
        </Parameter>
    </Datasource>
</Layer>

<Layer name="borders-level6" status="on" srs="&srs900913;">
    <StyleName>county-borders</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way,boundary,admin_level FROM ${DB_PREFIX}_roads
        WHERE "boundary"='administrative' AND admin_level = '6')
        AS borders
        </Parameter>
    </Datasource>
</Layer>

<Layer name="borders-level2-4" status="on" srs="&srs900913;">
	<StyleName>state-borders</StyleName>
	<StyleName>country-borders</StyleName>
	<Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way,boundary,admin_level FROM ${DB_PREFIX}_roads
        WHERE "boundary"='administrative' AND admin_level IN ('2','4'))
        AS borders
        </Parameter>
    </Datasource>
</Layer>

<Layer name="statenames" status="on" srs="&srs900913;">
    <StyleName>statenames</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way, place, name, ref FROM ${DB_PREFIX}_point
		WHERE place = 'state') AS statenames
		</Parameter>
    </Datasource>
</Layer>

<Layer name="placenames" status="on" srs="&srs900913;">
    <StyleName>placenames</StyleName>
    <Datasource>
        &dbsettings; &extents;
        <Parameter name="table">
            (SELECT way, name, place,
                    CASE WHEN place = 'city' THEN 2
                         WHEN place = 'town' THEN 4
                         WHEN place = 'suburb' THEN 5
                         WHEN place = 'village' THEN 6
                         WHEN place = 'hamlet' THEN 7
                         WHEN place = 'island' THEN 8
                         WHEN place = 'locality' THEN 9
                         ELSE 10
                     END AS place_order
             FROM ${DB_PREFIX}_point
             WHERE place IS NOT NULL AND name IS NOT NULL
             ORDER BY place_order) AS placenames
        </Parameter>
    </Datasource>
</Layer>

<Layer name="interstateshields" status="on" srs="&srs900913;">
    <StyleName>interstateshields</StyleName>
    <Datasource>
    	&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way, highway, roadnumber, char_length(roadnumber) as textlen FROM ${DB_PREFIX}_roads
		WHERE (highway = 'motorway' OR highway = 'trunk') AND roadtype = 'I')
		AS interstateshields</Parameter>
    </Datasource>
</Layer>

<Layer name="usshields" status="on" srs="&srs900913;">
    <StyleName>usshields</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way, highway, roadnumber FROM ${DB_PREFIX}_roads
		WHERE (highway &lt;&gt; '' AND highway IS NOT NULL) AND roadtype = 'U')
		AS usshields</Parameter>
    </Datasource>
</Layer>

<Layer name="stateshields" status="on" srs="&srs900913;">
    <StyleName>stateshields</StyleName>
    <Datasource>
    	&dbsettings; &extents;
		<Parameter name="table">
		(SELECT * FROM ${DB_PREFIX}_roads
		WHERE (highway &lt;&gt; '' AND highway IS NOT NULL) AND roadtype = 'S')
		AS stateshields</Parameter>
    </Datasource>
</Layer>

<Layer name="streetnames" status="on" srs="&srs900913;">
    <StyleName>streetnames</StyleName>
    <StyleName>trailnames</StyleName>
    <Datasource>
		&dbsettings; &extents;
		<Parameter name="table">
		(SELECT way, highway, name, tunnel FROM ${DB_PREFIX}_line ORDER BY z_order)
		AS streetnames</Parameter>
    </Datasource>
</Layer>

<Layer name="water-line-names" status="on" srs="&srs900913;">
    <StyleName>water-line-labels</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, waterway, disused, name, ST_Length(way) length
               FROM ${DB_PREFIX}_line
               WHERE waterway IS NOT NULL
                 AND name IS NOT NULL
               ORDER BY z_order, length DESC
            ) AS water_lines
        </Parameter>
    </Datasource>
</Layer>
<Layer name="water-area-names" status="on" srs="&srs900913;">
    <StyleName>water-area-labels</StyleName>
    <Datasource>
	&dbsettings; &extents;
	<Parameter name="table">
            (SELECT way, waterway, landuse, "natural", name, way_area
               FROM ${DB_PREFIX}_polygon
               WHERE (landuse IN ('reservoir', 'basin')
                      OR "natural" IN ('water', 'wetland', 'glacier'))
                 AND name IS NOT NULL
               ORDER BY way_area DESC
            ) AS water_areas
        </Parameter>
    </Datasource>
</Layer>

<Layer name="pointfeaturenames" status="on" srs="&srs900913;">
  <StyleName>featurenames</StyleName>
  <Datasource>
    &dbsettings; &extents;
    <Parameter name="table">
      (SELECT way, name, "natural", aeroway, railway, landuse, leisure,
              boundary, 0 as way_area, ele_ft,
              (CASE WHEN ele LIKE '%m' THEN substr(ele, 0, length(ele)-1) ELSE ele END) || ' m' as ele_w_unit
         FROM ${DB_PREFIX}_point) AS featurenames
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="areafeaturenames" status="on" srs="&srs900913;">
    <StyleName>featurenames</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">
	(SELECT way, name, "natural", aeroway, railway, landuse, leisure,
	boundary, way_area, 0 AS ele_ft
	FROM ${DB_PREFIX}_polygon ORDER BY z_order, way_area DESC)
	AS featurenames
      </Parameter>
      <Parameter name="geometry_field">way</Parameter>
    </Datasource>
</Layer>

<Layer name="points" status="on" srs="&srs900913;">
    <StyleName>symbols</StyleName>
    <Datasource>
      &dbsettings; &extents;
      <Parameter name="table">${DB_PREFIX}_point</Parameter>
    </Datasource>
</Layer>

</Map>
